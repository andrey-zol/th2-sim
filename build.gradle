plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'com.google.protobuf' version '0.8.8'
    id 'com.palantir.docker' version '0.25.0'
    id "com.jfrog.artifactory" version '4.15.1'
}

ext {
    dockerImageVersion = "${version_major}.${version_minor}.${version_maintenance}.${version_build}"
    version_slf4j       = '1.7.30'
    grpc_version        = '1.27.1'
    protobuf_version    = '3.11.0'

    genDir              = file('src/gen')
    sharedDir           = file("${project.rootDir}/shared")
}

group 'com.exactpro.th2'
version "${version_major}.${version_minor}-SNAPSHOT"

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenCentral()
    maven {
        name 'Artifactory snapshot'
        url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
    }
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    compile "org.slf4j:slf4j-api:${version_slf4j}"
    compile "org.slf4j:slf4j-log4j12:${version_slf4j}"
    
    compile "com.exactpro.th2:th2-common:1.0-SNAPSHOT"
    compile "com.exactpro.th2:grpc-api:1.0-SNAPSHOT"

    testImplementation 'junit:junit:4.12'
}

distTar {
    archiveName "${archivesBaseName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name "${target_docker_repository}/${docke_image_name}:${dockerImageVersion}"
    tag 'local-version', "${docke_image_name}:${dockerImageVersion}"
    tag 'local-latest', "${docke_image_name}:latest"
    tag 'remote-latest',  "${target_docker_repository}/${docke_image_name}:latest"
    copySpec.from(tarTree("$buildDir/distributions/${archivesBaseName}.tar"))
}

application {
    mainClassName = "com.exactpro.th2.simulator.run.SimulatorServerMain"
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'src/gen/main/java', 'src/gen/main/grpc'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.11.0"

    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
        }
    }
    generateProtoTasks.generatedFilesBaseDir = "${projectDir}/src/gen" //FIXME: Hot fix because files are generated in project from executed build
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }

    compileJava.dependsOn.add('generateProto')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

artifactoryPublish.skip = false

artifactory {
    publish {
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            publishBuildInfo = true
            // Properties to be attached to the published artifacts.
            publishPom = true
        }
    }
}

jar {
    from sourceSets.test.output+sourceSets.test.allSource
}

clean {
    delete genDir
}

sourceCompatibility = 1.8
